_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_last_episode_starts:
    value: '[ True  True  True  True]'
_last_obs:
    value: |-
        [[ 7.6933627  9.39516   10.660514  12.017626  13.266043  14.427625
          15.152359  16.248993  18.284554 ]
         [ 7.408709   9.370748  10.4631605 11.847415  13.266872  14.400041
          15.197767  16.791265  17.593273 ]
         [ 7.16531    9.4586315 10.714772  12.059608  13.25409   14.451643
          15.202106  16.994335  18.907677 ]
         [ 7.43436    9.2844715 10.66391   12.04472   13.377503  14.503882
          15.096114  16.241558  17.267633 ]]
_last_original_obs:
    value: |-
        [[ 7.6933627  9.39516   10.660514  12.017626  13.266043  14.427625
          15.152359  16.248993  18.284554 ]
         [ 7.408709   9.370748  10.4631605 11.847415  13.266872  14.400041
          15.197767  16.791265  17.593273 ]
         [ 7.16531    9.4586315 10.714772  12.059608  13.25409   14.451643
          15.202106  16.994335  18.907677 ]
         [ 7.43436    9.2844715 10.66391   12.04472   13.377503  14.503882
          15.096114  16.241558  17.267633 ]]
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x12748e420>
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 10000
_vec_normalize_env:
    value: <stable_baselines3.common.vec_env.vec_normalize.VecNormalize object at 0x123bda0f0>
_wandb:
    value:
        cli_version: 0.19.8
        m: []
        python_version: 3.12.8
        t:
            "1":
                - 1
                - 55
            "2":
                - 1
                - 55
            "3":
                - 1
                - 2
                - 3
                - 13
                - 16
                - 22
                - 23
                - 35
                - 55
            "4": 3.12.8
            "5": 0.19.8
            "8":
                - 5
            "12": 0.19.8
            "13": darwin-arm64
action_noise:
    value: None
action_space:
    value: Box([0.   0.   0.01], [0.1 3.  1. ], (3,), float32)
action_space_lower_bound:
    value:
        - 0
        - 0
        - 0.01
action_space_upper_bound:
    value:
        - 0.1
        - 3
        - 1
algo:
    value: PPO
algorithm:
    value: PPO
alpha:
    value: 0.8
batch_size:
    value: 64
clip_range:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x1320a07c0>
clip_range_vf:
    value: None
consumptions_params:
    value:
        - 0.8
        - 5
device:
    value: cpu
ent_coef:
    value: 0.01
env:
    value: <stable_baselines3.common.vec_env.vec_normalize.VecNormalize object at 0x123bda0f0>
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
episode_steps:
    value: 1000
exp_salaries_params:
    value:
        - 10
        - 1
gae_lambda:
    value: 0.95
gamma:
    value: 0.99
inital_taxes_params:
    value:
        - 0.01
        - 0.5
        - 0.5
learning_rate:
    value: 0.0003
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x124d68220>
max_grad_norm:
    value: 0.5
n_envs:
    value: 4
n_epochs:
    value: 10
n_steps:
    value: 2048
normalize_advantage:
    value: "True"
num_states:
    value: 9
num_timesteps:
    value: 0
observation_space:
    value: Box(-inf, inf, (9,), float32)
percentiles:
    value:
        - 1
        - 10
        - 25
        - 50
        - 75
        - 90
        - 95
        - 99
        - 99.9
policy:
    value: |-
        ActorCriticPolicy(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (pi_features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (vf_features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (mlp_extractor): MlpExtractor(
            (policy_net): Sequential(
              (0): Linear(in_features=9, out_features=64, bias=True)
              (1): Tanh()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): Tanh()
            )
            (value_net): Sequential(
              (0): Linear(in_features=9, out_features=64, bias=True)
              (1): Tanh()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): Tanh()
            )
          )
          (action_net): Linear(in_features=64, out_features=3, bias=True)
          (value_net): Linear(in_features=64, out_features=1, bias=True)
        )
policy_class:
    value: <class 'stable_baselines3.common.policies.ActorCriticPolicy'>
policy_kwargs:
    value: '{}'
policy_type:
    value: MlpPolicy
pop_size:
    value: 1000
returns_params:
    value:
        - 0.04
        - 0.2
reward_type:
    value: R1
rollout_buffer:
    value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x124d42900>
rollout_buffer_class:
    value: <class 'stable_baselines3.common.buffers.RolloutBuffer'>
rollout_buffer_kwargs:
    value: '{}'
run_id_for_evaluation:
    value: ""
schedule:
    value: const
sde_sample_freq:
    value: -1
seed:
    value: None
start_time:
    value: 1745165838477183000
target_kl:
    value: None
tensorboard_log:
    value: results/wandb_log/PPO/wir0rvc7
total_steps:
    value: 10000
use_sde:
    value: "False"
use_wandb:
    value: true
verbose:
    value: 1
vf_coef:
    value: 0.5
wealth_init_params:
    value:
        - 12
        - 2
